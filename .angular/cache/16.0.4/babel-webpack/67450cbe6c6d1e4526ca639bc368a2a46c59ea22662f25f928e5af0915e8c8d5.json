{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UserapiService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = \"http://localhost:8080/v2/signups\";\n  }\n  usersData() {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', `Bearer ${localStorage.getItem('Authorization')}`)\n    };\n    let response = this.httpClient.get(\"http://localhost:8080/v2/signups\", header);\n  }\n  deleteUser(sid) {\n    var header = {\n      headers: new HttpHeaders().set('Authorization', `Bearer ${localStorage.getItem('Authorization')}`)\n    };\n    return this.httpClient.delete(this.url + sid, header);\n  }\n}\nUserapiService.ɵfac = function UserapiService_Factory(t) {\n  return new (t || UserapiService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserapiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserapiService,\n  factory: UserapiService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserapiService };","map":{"version":3,"names":["HttpHeaders","UserapiService","constructor","httpClient","url","usersData","header","headers","set","localStorage","getItem","response","get","deleteUser","sid","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\singh\\Downloads\\AngularRestApi\\angular2023\\src\\app\\services\\userapi.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserapiService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  usersData(){\n\n    var header = {\n      headers: new HttpHeaders()\n     .set('Authorization',  `Bearer ${localStorage.getItem('Authorization')}`)\n   }\n  let response:Observable<Signups[]> = \n  this.httpClient.get<Signups[]>(\"http://localhost:8080/v2/signups\",header);\n\n\n  }\n\n url = \"http://localhost:8080/v2/signups\";\n\ndeleteUser(sid:number){\n  var header = {\n    headers: new HttpHeaders()\n   .set('Authorization',  `Bearer ${localStorage.getItem('Authorization')}`)\n }\n return this.httpClient.delete(this.url+sid, header);\n}\n\n\n\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAGaC,cAAc;EAEzBC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAc/B,KAAAC,GAAG,GAAG,kCAAkC;EAdM;EAE7CC,SAASA,CAAA;IAEP,IAAIC,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIP,WAAW,EAAE,CAC1BQ,GAAG,CAAC,eAAe,EAAG,UAAUC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;KACzE;IACF,IAAIC,QAAQ,GACZ,IAAI,CAACR,UAAU,CAACS,GAAG,CAAY,kCAAkC,EAACN,MAAM,CAAC;EAGzE;EAIFO,UAAUA,CAACC,GAAU;IACnB,IAAIR,MAAM,GAAG;MACXC,OAAO,EAAE,IAAIP,WAAW,EAAE,CAC1BQ,GAAG,CAAC,eAAe,EAAG,UAAUC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;KACzE;IACD,OAAO,IAAI,CAACP,UAAU,CAACY,MAAM,CAAC,IAAI,CAACX,GAAG,GAACU,GAAG,EAAER,MAAM,CAAC;EACpD;;AAxBaL,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPrB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}