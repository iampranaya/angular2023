{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass InterceptorService {\n  constructor() {}\n  intercept(req, next) {\n    let clonedRequest = req.clone({\n      setHeaders: {\n        'Authorization': this.getToken(),\n        'emaila': 'pranaya@gmail.com'\n      }\n    });\n    return next.handle(clonedRequest).pipe(tap(() => {\n      // to fix solar error\n    }, err => this.redirectToLogin()));\n  }\n  getToken() {\n    return sessionStorage.getItem('Authorization') || '';\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)();\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});\nexport { InterceptorService };","map":{"version":3,"names":["tap","InterceptorService","constructor","intercept","req","next","clonedRequest","clone","setHeaders","getToken","handle","pipe","err","redirectToLogin","sessionStorage","getItem","factory","ɵfac","providedIn"],"sources":["C:\\Users\\singh\\Downloads\\AngularRestApi\\angular2023\\src\\app\\services\\interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor() { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let clonedRequest=req.clone({\n      setHeaders:{\n        'Authorization':this.getToken(),\n         'emaila' :'pranaya@gmail.com'\n      }\n      \n    });\n \n    return next.handle(clonedRequest).pipe(\n      tap(\n        () => {\n          // to fix solar error\n        },\n        (err: any) => this.redirectToLogin()\n      )\n    );\n   }\n\n  public getToken(){\n    return sessionStorage.getItem('Authorization') || '';\n  }\n\n  \n \n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;AAEtC,MAGaC,kBAAkB;EAE7BC,YAAA,GAAgB;EAChBC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,aAAa,GAACF,GAAG,CAACG,KAAK,CAAC;MAC1BC,UAAU,EAAC;QACT,eAAe,EAAC,IAAI,CAACC,QAAQ,EAAE;QAC9B,QAAQ,EAAE;;KAGd,CAAC;IAEF,OAAOJ,IAAI,CAACK,MAAM,CAACJ,aAAa,CAAC,CAACK,IAAI,CACpCX,GAAG,CACD,MAAK;MACH;IAAA,CACD,EACAY,GAAQ,IAAK,IAAI,CAACC,eAAe,EAAE,CACrC,CACF;EACF;EAEMJ,QAAQA,CAAA;IACb,OAAOK,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;EACtD;;AAxBWd,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;SAAlBA,kBAAkB;EAAAe,OAAA,EAAlBf,kBAAkB,CAAAgB,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPjB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}