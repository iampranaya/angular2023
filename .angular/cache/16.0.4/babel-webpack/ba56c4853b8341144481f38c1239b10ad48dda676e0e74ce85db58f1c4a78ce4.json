{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass InterceptorService {\n  constructor(router) {\n    this.router = router;\n  }\n  intercept(req, next) {\n    let clonedRequest = req.clone({\n      setHeaders: {\n        'Authorization': this.getToken(),\n        'emaila': 'nagen@gmail.com'\n      }\n    });\n    return next.handle(clonedRequest).pipe(tap(() => {\n      // to fix solar error\n    }, err => this.redirectToLogin(err)));\n  }\n  getToken() {\n    return 'Bearer ' + sessionStorage.getItem('Authorization') || '';\n  }\n  redirectToLogin(err) {\n    if (err instanceof HttpErrorResponse) {\n      if (err.status === 401) {\n        this.router.navigate(['/login']);\n      }\n      if (err.status === 403) {\n        //hey! your are not authorized to delete this record!!!!\n        this.router.navigate(['/login']);\n      }\n      if (err.status === 500) {\n        this.router.navigate(['/login']);\n      }\n    }\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)(i0.ɵɵinject(i1.Router));\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});\nexport { InterceptorService };","map":{"version":3,"names":["HttpErrorResponse","tap","InterceptorService","constructor","router","intercept","req","next","clonedRequest","clone","setHeaders","getToken","handle","pipe","err","redirectToLogin","sessionStorage","getItem","status","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\singh\\Downloads\\AngularRestApi\\angular2023\\src\\app\\services\\interceptor.service.ts"],"sourcesContent":["import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor(private router:Router) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let clonedRequest=req.clone({\n      setHeaders:{\n        'Authorization':this.getToken(),\n         'emaila' :'nagen@gmail.com'\n      }\n     \n      \n    });\n \n    return next.handle(clonedRequest).pipe(\n      tap(\n        () => {\n          // to fix solar error\n        },\n        (err: any) => this.redirectToLogin(err)\n      )\n    );\n   }\n\n  public getToken(){\n    return 'Bearer ' + sessionStorage.getItem('Authorization') || '';\n  }\n\n  redirectToLogin(err: any) {\n\n    if (err instanceof HttpErrorResponse) {\n      if (err.status === 401) {\n       this.router.navigate(['/login']);\n      }\n      if (err.status === 403) {\n        //hey! your are not authorized to delete this record!!!!\n        this.router.navigate(['/login']);\n      }\n      if (err.status === 500) {\n        this.router.navigate(['/login']);\n      }\n    }\n\n\n  }\n \n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAA8D,sBAAsB;AAG9G,SAAqBC,GAAG,QAAQ,MAAM;;;AAEtC,MAGaC,kBAAkB;EAE7BC,YAAoBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;EAAW;EACrCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,aAAa,GAACF,GAAG,CAACG,KAAK,CAAC;MAC1BC,UAAU,EAAC;QACT,eAAe,EAAC,IAAI,CAACC,QAAQ,EAAE;QAC9B,QAAQ,EAAE;;KAId,CAAC;IAEF,OAAOJ,IAAI,CAACK,MAAM,CAACJ,aAAa,CAAC,CAACK,IAAI,CACpCZ,GAAG,CACD,MAAK;MACH;IAAA,CACD,EACAa,GAAQ,IAAK,IAAI,CAACC,eAAe,CAACD,GAAG,CAAC,CACxC,CACF;EACF;EAEMH,QAAQA,CAAA;IACb,OAAO,SAAS,GAAGK,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE;EAClE;EAEAF,eAAeA,CAACD,GAAQ;IAEtB,IAAIA,GAAG,YAAYd,iBAAiB,EAAE;MACpC,IAAIc,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;QACvB,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;MAEjC,IAAIL,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;QACtB;QACA,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;MAElC,IAAIL,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE;QACtB,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;;EAKtC;;AA3CWjB,kBAAkB,C;mBAAlBA,kBAAkB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAlBrB,kBAAkB,C;SAAlBA,kBAAkB;EAAAsB,OAAA,EAAlBtB,kBAAkB,CAAAuB,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPxB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}