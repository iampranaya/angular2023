{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SignupComponent = class SignupComponent {\n  constructor(httpClient, router, route) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.route = route;\n  }\n  ngOnInit() {}\n  validate(pusername, ppassword) {\n    const reqeuestBody = {\n      username: pusername.value,\n      password: ppassword.value\n    };\n    //HERE WE ARE MAKING REST CALL\n    let response = this.httpClient.post(\"http://localhost:8080/v2/auth\", reqeuestBody);\n    response.subscribe(data => {\n      console.log(data);\n      if (data.authorization !== null) {\n        localStorage.setItem('Authorization', data.authorization);\n        this.router.navigate(['home']);\n      }\n    }, error => {\n      console.log(error);\n      if (error.status === 401) {\n        this.message = \"Hey! username and password is not correct!\";\n      }\n    });\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"names":["Component","SignupComponent","constructor","httpClient","router","route","ngOnInit","validate","pusername","ppassword","reqeuestBody","username","value","password","response","post","subscribe","data","console","log","authorization","localStorage","setItem","navigate","error","status","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\singh\\Downloads\\AngularRestApi\\angular2023\\src\\app\\signup\\signup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private httpClient : HttpClient,private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n\n\n  public validate(pusername:any,ppassword:any) : void {\n    const reqeuestBody={username:pusername.value,password:ppassword.value};\n    //HERE WE ARE MAKING REST CALL\n    let response:Observable<AppResponse> = \n    this.httpClient.post<AppResponse>(\"http://localhost:8080/v2/auth\",reqeuestBody);\n    response.subscribe((data:AppResponse)=>{\n        console.log(data);\n        if(data.authorization!==null){\n            localStorage.setItem('Authorization',data.authorization);\n            this.router.navigate(['home']);\n        }\n    },(error)=>{\n       console.log(error);\n       if(error.status===401) {\n          this.message= \"Hey! username and password is not correct!\";\n       }\n    });\n}\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAOjD,IAAaC,eAAe,GAA5B,MAAaA,eAAe;EAE1BC,YAAoBC,UAAuB,EAASC,MAAc,EAAUC,KAAqB;IAA7E,KAAAF,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;EAAoB;EAErGC,QAAQA,CAAA,GACR;EAGOC,QAAQA,CAACC,SAAa,EAACC,SAAa;IACzC,MAAMC,YAAY,GAAC;MAACC,QAAQ,EAACH,SAAS,CAACI,KAAK;MAACC,QAAQ,EAACJ,SAAS,CAACG;IAAK,CAAC;IACtE;IACA,IAAIE,QAAQ,GACZ,IAAI,CAACX,UAAU,CAACY,IAAI,CAAc,+BAA+B,EAACL,YAAY,CAAC;IAC/EI,QAAQ,CAACE,SAAS,CAAEC,IAAgB,IAAG;MACnCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAGA,IAAI,CAACG,aAAa,KAAG,IAAI,EAAC;QACzBC,YAAY,CAACC,OAAO,CAAC,eAAe,EAACL,IAAI,CAACG,aAAa,CAAC;QACxD,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;;IAEtC,CAAC,EAAEC,KAAK,IAAG;MACRN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MAClB,IAAGA,KAAK,CAACC,MAAM,KAAG,GAAG,EAAE;QACpB,IAAI,CAACC,OAAO,GAAE,4CAA4C;;IAEhE,CAAC,CAAC;EACN;CAEC;AA3BYzB,eAAe,GAAA0B,UAAA,EAL3B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW7B,eAAe,CA2B3B;SA3BYA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}